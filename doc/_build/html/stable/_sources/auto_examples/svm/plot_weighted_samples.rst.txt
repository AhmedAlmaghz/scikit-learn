
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/svm/plot_weighted_samples.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_svm_plot_weighted_samples.py>`
        to download the full example code. or to run this example in your browser via JupyterLite or Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_svm_plot_weighted_samples.py:


=====================
SVM: العينات ذات الأوزان
=====================

رسم دالة القرار لمجموعة بيانات ذات أوزان، حيث يتناسب حجم النقاط
مع وزنها.

يعيد التوزين عينة إعادة ضبط معامل C، مما يعني أن المصنف
يركز أكثر على الحصول على هذه النقاط بشكل صحيح. قد يكون التأثير في كثير من الأحيان دقيقًا.
لتأكيد التأثير هنا، نحن نعطي أوزانًا أكبر للبيانات الشاذة، مما يجعل
تشوه حدود القرار واضحًا جدًا.

.. GENERATED FROM PYTHON SOURCE LINES 15-74



.. image-sg:: /auto_examples/svm/images/sphx_glr_plot_weighted_samples_001.png
   :alt: أوزان ثابتة, أوزان معدلة
   :srcset: /auto_examples/svm/images/sphx_glr_plot_weighted_samples_001.png
   :class: sphx-glr-single-img





.. code-block:: Python


    # المؤلفون: مطوري سكايلرن
    # معرف الترخيص: BSD-3-Clause

    import matplotlib.pyplot as plt
    import numpy as np

    from sklearn import svm


    def plot_decision_function(classifier, sample_weight, axis, title):
        # رسم دالة القرار
        xx, yy = np.meshgrid(np.linspace(-4, 5, 500), np.linspace(-4, 5, 500))

        Z = classifier.decision_function(np.c_[xx.ravel(), yy.ravel()])
        Z = Z.reshape(xx.shape)

        # رسم الخط، النقاط، وأقرب المتجهات إلى المستوى
        axis.contourf(xx, yy, Z, alpha=0.75, cmap=plt.cm.bone)
        axis.scatter(
            X[:, 0],
            X[:, 1],
            c=y,
            s=100 * sample_weight,
            alpha=0.9,
            cmap=plt.cm.bone,
            edgecolors="black",
        )

        axis.axis("off")
        axis.set_title(title)


    # نقوم بإنشاء 20 نقطة
    np.random.seed(0)
    X = np.r_[np.random.randn(10, 2) + [1, 1], np.random.randn(10, 2)]
    y = [1] * 10 + [-1] * 10
    sample_weight_last_ten = abs(np.random.randn(len(X)))
    sample_weight_constant = np.ones(len(X))
    # وأوزان أكبر للبيانات الشاذة
    sample_weight_last_ten[15:] *= 5
    sample_weight_last_ten[9] *= 15

    # تدريب النماذج.

    # هذا النموذج لا يأخذ في الاعتبار أوزان العينات.
    clf_no_weights = svm.SVC(gamma=1)
    clf_no_weights.fit(X, y)

    # هذا النموذج الآخر يأخذ في الاعتبار أوزان العينات المخصصة.
    clf_weights = svm.SVC(gamma=1)
    clf_weights.fit(X, y, sample_weight=sample_weight_last_ten)

    fig, axes = plt.subplots(1, 2, figsize=(14, 6))
    plot_decision_function(
        clf_no_weights, sample_weight_constant, axes[0], "أوزان ثابتة"
    )
    plot_decision_function(clf_weights, sample_weight_last_ten, axes[1], "أوزان معدلة")

    plt.show()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.526 seconds)


.. _sphx_glr_download_auto_examples_svm_plot_weighted_samples.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/svm/plot_weighted_samples.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: lite-badge

      .. image:: images/jupyterlite_badge_logo.svg
        :target: ../../lite/lab/index.html?path=auto_examples/svm/plot_weighted_samples.ipynb
        :alt: Launch JupyterLite
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_weighted_samples.ipynb <plot_weighted_samples.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_weighted_samples.py <plot_weighted_samples.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_weighted_samples.zip <plot_weighted_samples.zip>`


.. include:: plot_weighted_samples.recommendations


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
