
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/manifold/plot_t_sne_perplexity.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_manifold_plot_t_sne_perplexity.py>`
        to download the full example code. or to run this example in your browser via JupyterLite or Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_manifold_plot_t_sne_perplexity.py:


=============================================================================
t-SNE: تأثير قيم الحيرة المختلفة على الشكل
=============================================================================

توضيح لـ t-SNE على دائرتين متحدة المركز ومجموعة بيانات المنحنى S
لقيم حيرة مختلفة.

نلاحظ ميلًا نحو أشكال أوضح مع زيادة قيمة الحيرة.

قد يختلف حجم ومسافة وشكل المجموعات بناءً على التهيئة
وقيم الحيرة ولا ينقل دائمًا معنى.

كما هو موضح أدناه، يجد t-SNE بالنسبة للحيرة الأعلى شكلًا ذا معنى
لدائرتين متحدة المركز، ومع ذلك يختلف حجم ومسافة الدوائر
قليلاً عن الأصل. على عكس مجموعة بيانات الدائرتين، فإن الأشكال
تنحرف بصريًا عن شكل المنحنى S على مجموعة بيانات المنحنى S حتى
بالنسبة لقيم الحيرة الأكبر.

لمزيد من التفاصيل، يوفر "كيفية استخدام t-SNE بفعالية"
https://distill.pub/2016/misread-tsne/ نقاشًا جيدًا حول
تأثيرات المعلمات المختلفة، بالإضافة إلى مخططات تفاعلية لاستكشاف
هذه التأثيرات.

.. GENERATED FROM PYTHON SOURCE LINES 26-149



.. image-sg:: /auto_examples/manifold/images/sphx_glr_plot_t_sne_perplexity_001.png
   :alt: الحيرة=5, الحيرة=30, الحيرة=50, الحيرة=100, الحيرة=5, الحيرة=30, الحيرة=50, الحيرة=100, الحيرة=5, الحيرة=30, الحيرة=50, الحيرة=100
   :srcset: /auto_examples/manifold/images/sphx_glr_plot_t_sne_perplexity_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    الدوائر، الحيرة=5 في 0.14 ثانية
    الدوائر، الحيرة=30 في 0.17 ثانية
    الدوائر، الحيرة=50 في 0.23 ثانية
    الدوائر، الحيرة=100 في 0.19 ثانية
    المنحنى S، الحيرة=5 في 0.12 ثانية
    المنحنى S، الحيرة=30 في 0.18 ثانية
    المنحنى S، الحيرة=50 في 0.17 ثانية
    المنحنى S، الحيرة=100 في 0.23 ثانية
    الشبكة الموحدة، الحيرة=5 في 0.21 ثانية
    الشبكة الموحدة، الحيرة=30 في 0.2 ثانية
    الشبكة الموحدة، الحيرة=50 في 0.25 ثانية
    الشبكة الموحدة، الحيرة=100 في 0.25 ثانية






|

.. code-block:: Python


    # Authors: The scikit-learn developers
    # SPDX-License-Identifier: BSD-3-Clause

    from time import time

    import matplotlib.pyplot as plt
    import numpy as np
    from matplotlib.ticker import NullFormatter

    from sklearn import datasets, manifold

    n_samples = 150
    n_components = 2
    (fig, subplots) = plt.subplots(3, 5, figsize=(15, 8))
    perplexities = [5, 30, 50, 100]

    X, y = datasets.make_circles(
        n_samples=n_samples, factor=0.5, noise=0.05, random_state=0
    )

    red = y == 0
    green = y == 1

    ax = subplots[0][0]
    ax.scatter(X[red, 0], X[red, 1], c="r")
    ax.scatter(X[green, 0], X[green, 1], c="g")
    ax.xaxis.set_major_formatter(NullFormatter())
    ax.yaxis.set_major_formatter(NullFormatter())
    plt.axis("tight")

    for i, perplexity in enumerate(perplexities):
        ax = subplots[0][i + 1]

        t0 = time()
        tsne = manifold.TSNE(
            n_components=n_components,
            init="random",
            random_state=0,
            perplexity=perplexity,
            max_iter=300,
        )
        Y = tsne.fit_transform(X)
        t1 = time()
        print("الدوائر، الحيرة=%d في %.2g ثانية" % (perplexity, t1 - t0))
        ax.set_title("الحيرة=%d" % perplexity)
        ax.scatter(Y[red, 0], Y[red, 1], c="r")
        ax.scatter(Y[green, 0], Y[green, 1], c="g")
        ax.xaxis.set_major_formatter(NullFormatter())
        ax.yaxis.set_major_formatter(NullFormatter())
        ax.axis("tight")

    # مثال آخر باستخدام المنحنى S
    X, color = datasets.make_s_curve(n_samples, random_state=0)

    ax = subplots[1][0]
    ax.scatter(X[:, 0], X[:, 2], c=color)
    ax.xaxis.set_major_formatter(NullFormatter())
    ax.yaxis.set_major_formatter(NullFormatter())

    for i, perplexity in enumerate(perplexities):
        ax = subplots[1][i + 1]

        t0 = time()
        tsne = manifold.TSNE(
            n_components=n_components,
            init="random",
            random_state=0,
            perplexity=perplexity,
            learning_rate="auto",
            max_iter=300,
        )
        Y = tsne.fit_transform(X)
        t1 = time()
        print("المنحنى S، الحيرة=%d في %.2g ثانية" % (perplexity, t1 - t0))

        ax.set_title("الحيرة=%d" % perplexity)
        ax.scatter(Y[:, 0], Y[:, 1], c=color)
        ax.xaxis.set_major_formatter(NullFormatter())
        ax.yaxis.set_major_formatter(NullFormatter())
        ax.axis("tight")


    # مثال آخر باستخدام شبكة موحدة ثنائية الأبعاد
    x = np.linspace(0, 1, int(np.sqrt(n_samples)))
    xx, yy = np.meshgrid(x, x)
    X = np.hstack(
        [
            xx.ravel().reshape(-1, 1),
            yy.ravel().reshape(-1, 1),
        ]
    )
    color = xx.ravel()
    ax = subplots[2][0]
    ax.scatter(X[:, 0], X[:, 1], c=color)
    ax.xaxis.set_major_formatter(NullFormatter())
    ax.yaxis.set_major_formatter(NullFormatter())

    for i, perplexity in enumerate(perplexities):
        ax = subplots[2][i + 1]

        t0 = time()
        tsne = manifold.TSNE(
            n_components=n_components,
            init="random",
            random_state=0,
            perplexity=perplexity,
            max_iter=400,
        )
        Y = tsne.fit_transform(X)
        t1 = time()
        print("الشبكة الموحدة، الحيرة=%d في %.2g ثانية" % (perplexity, t1 - t0))

        ax.set_title("الحيرة=%d" % perplexity)
        ax.scatter(Y[:, 0], Y[:, 1], c=color)
        ax.xaxis.set_major_formatter(NullFormatter())
        ax.yaxis.set_major_formatter(NullFormatter())
        ax.axis("tight")


    plt.show()




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.296 seconds)


.. _sphx_glr_download_auto_examples_manifold_plot_t_sne_perplexity.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/manifold/plot_t_sne_perplexity.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: lite-badge

      .. image:: images/jupyterlite_badge_logo.svg
        :target: ../../lite/lab/index.html?path=auto_examples/manifold/plot_t_sne_perplexity.ipynb
        :alt: Launch JupyterLite
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_t_sne_perplexity.ipynb <plot_t_sne_perplexity.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_t_sne_perplexity.py <plot_t_sne_perplexity.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_t_sne_perplexity.zip <plot_t_sne_perplexity.zip>`


.. include:: plot_t_sne_perplexity.recommendations


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
