
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/release_highlights/plot_release_highlights_1_3_0.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_release_highlights_plot_release_highlights_1_3_0.py>`
        to download the full example code. or to run this example in your browser via JupyterLite or Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_release_highlights_plot_release_highlights_1_3_0.py:


=======================================
أبرز ميزات الإصدار 1.3 من scikit-learn
=======================================

.. currentmodule:: sklearn

يسعدنا الإعلان عن إصدار scikit-learn 1.3! تم إصلاح العديد من الأخطاء
وإجراء تحسينات، بالإضافة إلى بعض الميزات الرئيسية الجديدة. نستعرض
أدناه بعض الميزات الرئيسية لهذا الإصدار. **للاطلاع على قائمة شاملة
بجميع التغييرات**، يرجى الرجوع إلى :ref:`ملاحظات الإصدار <release_notes_1_3>`.

لتثبيت أحدث إصدار (باستخدام pip)::

    pip install --upgrade scikit-learn

أو باستخدام conda::

    conda install -c conda-forge scikit-learn

.. GENERATED FROM PYTHON SOURCE LINES 25-41

توجيه البيانات الوصفية
----------------
نحن بصدد تقديم طريقة جديدة لتوجيه البيانات الوصفية مثل
``sample_weight`` في جميع أنحاء قاعدة الكود، والتي ستؤثر على كيفية
توجيه البيانات الوصفية في المُقدرات الفوقية مثل :class:`pipeline.Pipeline`
و :class:`model_selection.GridSearchCV`. على الرغم من أن البنية التحتية
لهذه الميزة موجودة بالفعل في هذا الإصدار، إلا أن العمل لا يزال جارياً
ولا تدعم جميع المُقدرات الفوقية هذه الميزة الجديدة. يمكنك قراءة
المزيد عن هذه الميزة في :ref:`دليل المستخدم لتوجيه البيانات الوصفية
<metadata_routing>`. يرجى ملاحظة أن هذه الميزة لا تزال قيد التطوير
ولم يتم تنفيذها لمعظم المُقدرات الفوقية.

يمكن لمطوري الجهات الخارجية البدء بالفعل في دمج هذه الميزة في
المُقدرات الفوقية الخاصة بهم. لمزيد من التفاصيل، راجع
:ref:`دليل المطور لتوجيه البيانات الوصفية
<sphx_glr_auto_examples_miscellaneous_plot_metadata_routing.py>`.

.. GENERATED FROM PYTHON SOURCE LINES 43-53

HDBSCAN: التجميع القائم على الكثافة الهرمية
----------------------------------------------
تم استضافة :class:`cluster.HDBSCAN` في مستودع scikit-learn-contrib
في الأصل، وتم اعتماده الآن في scikit-learn. يفتقد بعض الميزات من
التنفيذ الأصلي والتي سيتم إضافتها في الإصدارات المستقبلية.
من خلال تنفيذ نسخة معدلة من :class:`cluster.DBSCAN` على عدة قيم
epsilon في نفس الوقت، يقوم :class:`cluster.HDBSCAN` باكتشاف مجموعات
ذات كثافات متنوعة، مما يجعله أكثر مرونة في اختيار المعلمات
مقارنة بـ :class:`cluster.DBSCAN`.
لمزيد من التفاصيل، راجع :ref:`دليل المستخدم <hdbscan>`.

.. GENERATED FROM PYTHON SOURCE LINES 53-67

.. code-block:: Python

    import numpy as np
    from sklearn.cluster import HDBSCAN
    from sklearn.datasets import load_digits
    from sklearn.metrics import v_measure_score

    X, true_labels = load_digits(return_X_y=True)
    print(f"عدد الأرقام: {len(np.unique(true_labels))}")

    hdbscan = HDBSCAN(min_cluster_size=15).fit(X)
    non_noisy_labels = hdbscan.labels_[hdbscan.labels_ != -1]
    print(f"عدد المجموعات المكتشفة: {len(np.unique(non_noisy_labels))}")

    print(v_measure_score(true_labels[hdbscan.labels_ != -1], non_noisy_labels))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    عدد الأرقام: 10
    عدد المجموعات المكتشفة: 11
    0.969526722382904




.. GENERATED FROM PYTHON SOURCE LINES 68-74

TargetEncoder: استراتيجية ترميز فئات جديدة
-----------------------------------------------
مناسب للفئات ذات الكاردينالية العالية،
:class:`preprocessing.TargetEncoder` يقوم بترميز الفئات بناءً على تقدير
منكمش للقيم المتوسطة للهدف للملاحظات التي تنتمي إلى تلك الفئة.
لمزيد من التفاصيل، راجع :ref:`دليل المستخدم <target_encoder>`.

.. GENERATED FROM PYTHON SOURCE LINES 74-85

.. code-block:: Python

    import numpy as np
    from sklearn.preprocessing import TargetEncoder

    X = np.array([["cat"] * 30 + ["dog"] * 20 + ["snake"] * 38], dtype=object).T
    y = [90.3] * 30 + [20.4] * 20 + [21.2] * 38

    enc = TargetEncoder(random_state=0)
    X_trans = enc.fit_transform(X, y)

    enc.encodings_





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [array([90.3, 20.4, 21.2])]



.. GENERATED FROM PYTHON SOURCE LINES 86-96

دعم القيم المفقودة في أشجار القرار
----------------------------------------
تدعم الفئات :class:`tree.DecisionTreeClassifier` و
:class:`tree.DecisionTreeRegressor` الآن القيم المفقودة. بالنسبة لكل عتبة
محتملة على البيانات غير المفقودة، سيقوم المقسم بتقييم التقسيم مع
جميع القيم المفقودة التي تذهب إلى العقدة اليسرى أو العقدة اليمنى.
لمزيد من التفاصيل، راجع :ref:`دليل المستخدم <tree_missing_value_support>`
أو راجع :ref:`sphx_glr_auto_examples_ensemble_plot_hgbt_regression.py`
لمثال على حالة استخدام هذه الميزة في
:class:`~ensemble.HistGradientBoostingRegressor`.

.. GENERATED FROM PYTHON SOURCE LINES 96-105

.. code-block:: Python

    import numpy as np
    from sklearn.tree import DecisionTreeClassifier

    X = np.array([0, 1, 6, np.nan]).reshape(-1, 1)
    y = [0, 0, 1, 1]

    tree = DecisionTreeClassifier(random_state=0).fit(X, y)
    tree.predict(X)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    array([0, 0, 1, 1])



.. GENERATED FROM PYTHON SOURCE LINES 106-110

عرض جديد :class:`~model_selection.ValidationCurveDisplay`
------------------------------------------------------------
:class:`model_selection.ValidationCurveDisplay` متاح الآن لرسم النتائج
من :func:`model_selection.validation_curve`.

.. GENERATED FROM PYTHON SOURCE LINES 110-126

.. code-block:: Python

    from sklearn.datasets import make_classification
    from sklearn.linear_model import LogisticRegression
    from sklearn.model_selection import ValidationCurveDisplay

    X, y = make_classification(1000, 10, random_state=0)

    _ = ValidationCurveDisplay.from_estimator(
        LogisticRegression(),
        X,
        y,
        param_name="C",
        param_range=np.geomspace(1e-5, 1e3, num=9),
        score_type="both",
        score_name="Accuracy",
    )




.. image-sg:: /auto_examples/release_highlights/images/sphx_glr_plot_release_highlights_1_3_0_001.png
   :alt: plot release highlights 1 3 0
   :srcset: /auto_examples/release_highlights/images/sphx_glr_plot_release_highlights_1_3_0_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 127-132

خسارة Gamma للتعزيز التدريجي
--------------------------------
تدعم الفئة :class:`ensemble.HistGradientBoostingRegressor`
دالة خسارة الانحراف Gamma عبر `loss="gamma"`. هذه دالة خسارة مفيدة
لنمذجة الأهداف الإيجابية الصارمة مع توزيع منحرف إلى اليمين.

.. GENERATED FROM PYTHON SOURCE LINES 132-145

.. code-block:: Python

    import numpy as np
    from sklearn.model_selection import cross_val_score
    from sklearn.datasets import make_low_rank_matrix
    from sklearn.ensemble import HistGradientBoostingRegressor

    n_samples, n_features = 500, 10
    rng = np.random.RandomState(0)
    X = make_low_rank_matrix(n_samples, n_features, random_state=rng)
    coef = rng.uniform(low=-10, high=20, size=n_features)
    y = rng.gamma(shape=2, scale=np.exp(X @ coef) / 2)
    gbdt = HistGradientBoostingRegressor(loss="gamma")
    cross_val_score(gbdt, X, y).mean()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    np.float64(0.46858513287221665)



.. GENERATED FROM PYTHON SOURCE LINES 146-153

تجميع الفئات غير المتكررة في :class:`~preprocessing.OrdinalEncoder`
------------------------------------------------------------------------
على غرار :class:`preprocessing.OneHotEncoder`، تدعم الفئة
:class:`preprocessing.OrdinalEncoder` الآن تجميع الفئات غير المتكررة
في ناتج واحد لكل ميزة. المعاملات لتمكين تجميع الفئات غير المتكررة
هي `min_frequency` و `max_categories`.
راجع :ref:`دليل المستخدم <encoder_infrequent_categories>` لمزيد من التفاصيل.

.. GENERATED FROM PYTHON SOURCE LINES 153-160

.. code-block:: Python

    from sklearn.preprocessing import OrdinalEncoder
    import numpy as np

    X = np.array(
        [["dog"] * 5 + ["cat"] * 20 + ["rabbit"] * 10 + ["snake"] * 3], dtype=object
    ).T
    enc = OrdinalEncoder(min_frequency=6).fit(X)
    enc.infrequent_categories_



.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [array(['dog', 'snake'], dtype=object)]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.799 seconds)


.. _sphx_glr_download_auto_examples_release_highlights_plot_release_highlights_1_3_0.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/release_highlights/plot_release_highlights_1_3_0.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: lite-badge

      .. image:: images/jupyterlite_badge_logo.svg
        :target: ../../lite/lab/index.html?path=auto_examples/release_highlights/plot_release_highlights_1_3_0.ipynb
        :alt: Launch JupyterLite
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_release_highlights_1_3_0.ipynb <plot_release_highlights_1_3_0.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_release_highlights_1_3_0.py <plot_release_highlights_1_3_0.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_release_highlights_1_3_0.zip <plot_release_highlights_1_3_0.zip>`


.. include:: plot_release_highlights_1_3_0.recommendations


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
